services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  discovery-service:
    image: majaaz/discovery-service:latest
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    environment:
      - SPRING_ZIPKIN_ENABLED=true
      - management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans

  apigateway-service:
    image: majaaz/apigateway-service:latest
    build:
      context: ./apigateway-service
      dockerfile: Dockerfile
    ports:
      - 9000:9000
    environment:
      - SPRING_ZIPKIN_ENABLED=true
      - management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
    depends_on:
      - discovery-service

  order-service:
    image: majaaz/order-service:latest
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    environment:
      - SPRING_ZIPKIN_ENABLED=true
      - management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
      - spring.kafka.bootstrap-servers=broker:29092
      - spring.datasource.url=jdbc:mysql://${DB_URL}:3306/orders
      - spring.datasource.username=${RDS_USERNAME}
      - spring.datasource.password=${DB_PASSWORD}
    depends_on:
      - discovery-service
      - apigateway-service

  product-service:
    image: majaaz/product-service:latest
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    environment:
      - SPRING_ZIPKIN_ENABLED=true
      - management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
      - spring.datasource.url=jdbc:mysql://${DB_URL}:3306/product
      - spring.datasource.username=${RDS_USERNAME}
      - spring.datasource.password=${DB_PASSWORD}
    depends_on:
      - discovery-service
      - apigateway-service
  
  user-service:
    image: majaaz/user-service:latest
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - 80:80
    environment:
      - SPRING_ZIPKIN_ENABLED=true
      - management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
    depends_on:
      - discovery-service
      - apigateway-service

  cart-service:
    image: majaaz/cart-service:latest
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    ports:
      - 8086:8086
    environment:
      - SPRING_ZIPKIN_ENABLED=true
      - management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
      - spring.datasource.url=jdbc:mysql://${DB_URL}:3306/cart
      - spring.datasource.username=${RDS_USERNAME}
      - spring.datasource.password=${DB_PASSWORD}
    depends_on:
      - discovery-service
      - apigateway-service
  
  payment-gateway-service:
    image: majaaz/payment-gateway-service:latest
    build:
      context: ./payment-gateway-service
      dockerfile: Dockerfile
    ports:
      - 8089:8089
    environment:
      - SPRING_ZIPKIN_ENABLED=true
      - management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
      - spring.datasource.url=jdbc:mysql://${DB_URL}:3306/payment
      - spring.datasource.username=${RDS_USERNAME}
      - spring.datasource.password=${DB_PASSWORD}
    depends_on:
      - discovery-service
      - apigateway-service
  
  inventory-service:
    image: majaaz/inventory-service:latest
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    ports:
      - 8083:8083
    environment:
      - SPRING_ZIPKIN_ENABLED=true
      - management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
      - spring.datasource.url=jdbc:mysql://${DB_URL}:3306/inventory
      - spring.datasource.username=${RDS_USERNAME}
      - spring.datasource.password=${DB_PASSWORD}
    depends_on:
      - discovery-service
      - apigateway-service
  
  notification-service:
    image: majaaz/notification-service:latest
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - 8085:8085
    environment:
      - SPRING_ZIPKIN_ENABLED=true
      - management.zipkin.tracing.endpoint=http://zipkin:9411/api/v2/spans
      - spring.kafka.bootstrap-servers=broker:29092
    depends_on:
      - discovery-service
      - apigateway-service

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - product-service
      - order-service
      - inventory-service
      - notification-service

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - 'grafana-storage:/var/lib/grafana'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password

volumes:
  grafana-storage: {}
